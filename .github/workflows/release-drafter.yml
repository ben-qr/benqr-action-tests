name: Release Drafter

on:
  push:
    branches:
      - main

jobs:
  update_release_draft:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      - uses: release-drafter/release-drafter@v5
        id: drafts
        # with:
          # header: ${{ steps.check_mismatch.outputs.VERSION_MATCH_MSG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# want to use RESOLVED_VERSION from the release drafter for comparison, but its not outputted
      - name: Check for setup.py
        id: check_files
        uses: andstor/file-existence-action@v2
        with:
          files: "setup.cfg"

      - name: Define Setup File
        id: define_setup
        run: |
          if '${{ steps.check_files.outputs.files_exists }}' == 'true'
          then
            echo "SETUP_FILE=setup.cfg" >> $GITHUB_OUTPUT
          else
            echo "SETUP_FILE=setup.py" >> $GITHUB_OUTPUT
          fi

      - name: Read Setup File
        id: read_setup
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ steps.define_setup.outputs.SETUP_FILE }}

      - name: Check for Tag Mismatch
        id: check_mismatch
        run: |
            echo '${{ steps.read_setup.outputs.content }}'
            echo "version\s*=\s*\"?${{ steps.drafts.outputs.name }}\"?"
            if [[ '${{ steps.read_setup.outputs.content }}' =~ "version\s*=\s*\"?${{ steps.drafts.outputs.name }}\"?" ]]
            then
              echo "VERSION_MATCH_MSG=" >> $GITHUB_OUTPUT
            else
              echo "VERSION_MATCH_MSG=:rotating_light: **The version in setup file ${{ steps.define_setup.outputs.SETUP_FILE }} still needs to be updated to ${{ steps.drafts.outputs.name }} before publishing new release**" >> $GITHUB_OUTPUT
            fi

      - uses: release-drafter/release-drafter@v5
        with:
          header: ${{ steps.check_mismatch.outputs.VERSION_MATCH_MSG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
