name: PyTest

on: [pull_request]

jobs:
#    check-paths:
#        runs-on: ubuntu-latest
#        outputs:
#          should-test: ${{ steps.filter.outputs.doTest }}
#        steps:
#          - uses: dorny/paths-filter@v2
#            id: filter
#            with:
#              filters: |
#                doTest:
#                  - '**.py'
#                  - '**.html'
#                  - 'requirements/**'
#                  - '**/tests/**'

    test:
#        needs: check-paths
#        if: needs.check-paths.outputs.should-test == 'true'
        runs-on: ubuntu-latest
        timeout-minutes: 10

        steps:
            - name: Check out Repository
              uses: actions/checkout@v3

            - name: SSH Agent
              uses: webfactory/ssh-agent@v0.5.4
              with:
                ssh-private-key: ${{ secrets.SSH_KEY }}

            - name: Set up Python 3.10
              id: setup-python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Set Env Vars
              run: |
                  echo "DJANGO_SETTINGS_MODULE=eris.settings.ci" >> $GITHUB_ENV
                  echo "DEBUG=1" >> $GITHUB_ENV
            - name: Cache Dependencies
              id: cache-pip
              uses: actions/cache@v3.0.4
              with:
                  path: venv
                  key: pip-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('requirements/base.txt', 'requirements/test.txt') }}
                  restore-keys: pip-${{ steps.setup-python.outputs.python-version }}-

            - name: Install Dependencies
              if: steps.cache-pip.outputs.cache-hit != 'true'
              run: |
                  python -m venv venv
                  . venv/bin/activate
                  python -m pip install --upgrade pip
                  pip install -r requirements/test.txt

            - name: Run Tests
              working-directory: ./example
              run: |
                  . venv/bin/activate
                  pytest
